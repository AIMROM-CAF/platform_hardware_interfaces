/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.tv.tuner@1.0;

import android.hidl.safe_union@1.0;

@export
enum Result : int32_t {
    SUCCESS,
    UNAVAILABLE,
    NOT_INITIALIZED,
    INVALID_STATE,
    INVALID_ARGUMENT,
    OUT_OF_MEMORY,
    UNKNOWN_ERROR,
};

/**
 * Frontend ID.
 */
typedef uint32_t FrontendId;

/**
 *  Frontend Types.
 */
@export
enum FrontendType : uint32_t {
    UNDEFINED = 0,
    ANALOG,
    ATSC,
    DVBC,
    DVBS,
    DVBT,
    ISDBT,
};

/**
 *  Inner Forward Error Correction type as specified in ETSI EN 300 468 V1.15.1
 *  It's a 4-bit field specifying the inner FEC scheme used according to the
 *  table 35 in the spec.
 */
@export
enum FrontendInnerFec : uint32_t {
    /* Not defined */
    FEC_UNDEFINED = 0,
    /* 1/2 conv. code rate */
    FEC_1_2 = 1 << 0,
    /* 2/3 conv. code rate */
    FEC_2_3 = 1 << 1,
    /* 3/4 conv. code rate */
    FEC_3_4 = 1 << 2,
    /* 5/6 conv. code rate */
    FEC_5_6 = 1 << 3,
    /* 7/8 conv. code rate */
    FEC_7_8 = 1 << 4,
    /* 8/9 conv. code rate */
    FEC_8_9 = 1 << 5,
    /* 3/5 conv. code rate */
    FEC_3_5 = 1 << 6,
    /* 4/5 conv. code rate */
    FEC_4_5 = 1 << 7,
    /* 9/10 conv. code rate */
    FEC_9_10 = 1 << 8,
    /* hardware is able to detect and set FEC automatically */
    FEC_AUTO = 1 << 9,
};

/**
 *  Modulation Type for ATSC.
 */
@export
enum FrontendAtscModulation : uint32_t {
    UNDEFINED = 0,
    MOD_8VSB = 1 << 0,
    MOD_16VSB = 1 << 1,
};

/**
 *  Signal Setting for ATSC Frontend.
 */
struct FrontendAtscSettings {
    /** Signal frequencey in Herhz */
    uint32_t frequency;
    FrontendAtscModulation modulation;
};

/**
 *  Signal Setting for DVBT Frontend.
 */
struct FrontendDvbtSettings {
    /** Signal frequencey in Herhz */
    uint32_t frequency;
    FrontendAtscModulation modulation;
    FrontendInnerFec fec;
};

/**
 *  Modulation Type for ATSC.
 */
safe_union FrontendSettings {
    FrontendAtscSettings atsc;
    FrontendDvbtSettings dvbt;
};

/**
 * Frontend Event Type.
 */
@export
enum FrontendEventType : uint32_t {
    /**
     * If frontend locked the signal which is specified by tune method, HAL sent
     * Locked event.
     */
    LOCKED,
    /**
     * If frontend can't locked the signal which is specified by tune method,
     * HAL sent NO_SIGNAL event.
     */
    NO_SIGNAL,
    /**
     * If frontend detect that the locked signal get lost, HAL sent LOST_LOCK
     * event.
     */
    LOST_LOCK,
};
